
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     mojo/services/tracing/public/interfaces/tracing.mojom
//

package org.chromium.mojom.tracing;

import org.chromium.base.annotations.SuppressFBWarnings;


public final class StartupPerformanceTimes extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 64;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(64, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];





    public long shellProcessCreationTime;

    public long shellMainEntryPointTime;

    public long browserMessageLoopStartTicks;

    public long browserWindowDisplayTicks;

    public long browserOpenTabsTimeDelta;

    public long firstWebContentsMainFrameLoadTicks;

    public long firstVisuallyNonEmptyLayoutTicks;



    private StartupPerformanceTimes(int version) {
        super(STRUCT_SIZE, version);















    }

    public StartupPerformanceTimes() {
        this(0);
    }

    public static StartupPerformanceTimes deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    @SuppressWarnings("unchecked")
    public static StartupPerformanceTimes decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
        StartupPerformanceTimes result = new StartupPerformanceTimes(mainDataHeader.elementsOrVersion);


        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.shellProcessCreationTime = decoder0.readLong(8);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.shellMainEntryPointTime = decoder0.readLong(16);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.browserMessageLoopStartTicks = decoder0.readLong(24);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.browserWindowDisplayTicks = decoder0.readLong(32);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.browserOpenTabsTimeDelta = decoder0.readLong(40);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.firstWebContentsMainFrameLoadTicks = decoder0.readLong(48);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.firstVisuallyNonEmptyLayoutTicks = decoder0.readLong(56);
            
        }
















        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {

        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);



        
        
        encoder0.encode(shellProcessCreationTime, 8);
        

















        
        
        encoder0.encode(shellMainEntryPointTime, 16);
        

















        
        
        encoder0.encode(browserMessageLoopStartTicks, 24);
        

















        
        
        encoder0.encode(browserWindowDisplayTicks, 32);
        

















        
        
        encoder0.encode(browserOpenTabsTimeDelta, 40);
        

















        
        
        encoder0.encode(firstWebContentsMainFrameLoadTicks, 48);
        

















        
        
        encoder0.encode(firstVisuallyNonEmptyLayoutTicks, 56);
        
















    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;

        StartupPerformanceTimes other = (StartupPerformanceTimes) object;

        if (this.shellProcessCreationTime != other.shellProcessCreationTime)
            return false;

        if (this.shellMainEntryPointTime != other.shellMainEntryPointTime)
            return false;

        if (this.browserMessageLoopStartTicks != other.browserMessageLoopStartTicks)
            return false;

        if (this.browserWindowDisplayTicks != other.browserWindowDisplayTicks)
            return false;

        if (this.browserOpenTabsTimeDelta != other.browserOpenTabsTimeDelta)
            return false;

        if (this.firstWebContentsMainFrameLoadTicks != other.firstWebContentsMainFrameLoadTicks)
            return false;

        if (this.firstVisuallyNonEmptyLayoutTicks != other.firstVisuallyNonEmptyLayoutTicks)
            return false;


        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(shellProcessCreationTime);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(shellMainEntryPointTime);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(browserMessageLoopStartTicks);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(browserWindowDisplayTicks);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(browserOpenTabsTimeDelta);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(firstWebContentsMainFrameLoadTicks);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(firstVisuallyNonEmptyLayoutTicks);

        return result;
    }
}
