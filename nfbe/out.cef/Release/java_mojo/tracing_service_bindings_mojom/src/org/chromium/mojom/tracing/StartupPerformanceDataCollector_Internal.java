
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     mojo/services/tracing/public/interfaces/tracing.mojom
//

package org.chromium.mojom.tracing;

import org.chromium.base.annotations.SuppressFBWarnings;


class StartupPerformanceDataCollector_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<StartupPerformanceDataCollector, StartupPerformanceDataCollector.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<StartupPerformanceDataCollector, StartupPerformanceDataCollector.Proxy>() {
    
        public String getName() {
            return "tracing::StartupPerformanceDataCollector";
        }
    
        public int getVersion() {
          return 0;
        }
    
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }
    
        public Stub buildStub(org.chromium.mojo.system.Core core, StartupPerformanceDataCollector impl) {
            return new Stub(core, impl);
        }
    
        public StartupPerformanceDataCollector[] buildArray(int size) {
          return new StartupPerformanceDataCollector[size];
        }
    };


    private static final int SET_SHELL_PROCESS_CREATION_TIME_ORDINAL = 0;

    private static final int SET_SHELL_MAIN_ENTRY_POINT_TIME_ORDINAL = 1;

    private static final int SET_BROWSER_MESSAGE_LOOP_START_TICKS_ORDINAL = 2;

    private static final int SET_BROWSER_WINDOW_DISPLAY_TICKS_ORDINAL = 3;

    private static final int SET_BROWSER_OPEN_TABS_TIME_DELTA_ORDINAL = 4;

    private static final int SET_FIRST_WEB_CONTENTS_MAIN_FRAME_LOAD_TICKS_ORDINAL = 5;

    private static final int SET_FIRST_VISUALLY_NON_EMPTY_LAYOUT_TICKS_ORDINAL = 6;

    private static final int GET_STARTUP_PERFORMANCE_TIMES_ORDINAL = 7;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements StartupPerformanceDataCollector.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void setShellProcessCreationTime(
long time) {

            StartupPerformanceDataCollectorSetShellProcessCreationTimeParams _message = new StartupPerformanceDataCollectorSetShellProcessCreationTimeParams();

            _message.time = time;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_SHELL_PROCESS_CREATION_TIME_ORDINAL)));

        }


        @Override
        public void setShellMainEntryPointTime(
long time) {

            StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams _message = new StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams();

            _message.time = time;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_SHELL_MAIN_ENTRY_POINT_TIME_ORDINAL)));

        }


        @Override
        public void setBrowserMessageLoopStartTicks(
long ticks) {

            StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams _message = new StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams();

            _message.ticks = ticks;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_BROWSER_MESSAGE_LOOP_START_TICKS_ORDINAL)));

        }


        @Override
        public void setBrowserWindowDisplayTicks(
long ticks) {

            StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams _message = new StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams();

            _message.ticks = ticks;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_BROWSER_WINDOW_DISPLAY_TICKS_ORDINAL)));

        }


        @Override
        public void setBrowserOpenTabsTimeDelta(
long delta) {

            StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams _message = new StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams();

            _message.delta = delta;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_BROWSER_OPEN_TABS_TIME_DELTA_ORDINAL)));

        }


        @Override
        public void setFirstWebContentsMainFrameLoadTicks(
long ticks) {

            StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams _message = new StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams();

            _message.ticks = ticks;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_FIRST_WEB_CONTENTS_MAIN_FRAME_LOAD_TICKS_ORDINAL)));

        }


        @Override
        public void setFirstVisuallyNonEmptyLayoutTicks(
long ticks) {

            StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams _message = new StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams();

            _message.ticks = ticks;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_FIRST_VISUALLY_NON_EMPTY_LAYOUT_TICKS_ORDINAL)));

        }


        @Override
        public void getStartupPerformanceTimes(

GetStartupPerformanceTimesResponse callback) {

            StartupPerformanceDataCollectorGetStartupPerformanceTimesParams _message = new StartupPerformanceDataCollectorGetStartupPerformanceTimesParams();


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_STARTUP_PERFORMANCE_TIMES_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsForwardToCallback(callback));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<StartupPerformanceDataCollector> {

        Stub(org.chromium.mojo.system.Core core, StartupPerformanceDataCollector impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.NO_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                StartupPerformanceDataCollector_Internal.MANAGER, messageWithHeader);
            
            
            
            
            
                    case SET_SHELL_PROCESS_CREATION_TIME_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetShellProcessCreationTimeParams data =
                                StartupPerformanceDataCollectorSetShellProcessCreationTimeParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setShellProcessCreationTime(data.time);
                        return true;
                    }
            
            
            
            
            
                    case SET_SHELL_MAIN_ENTRY_POINT_TIME_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams data =
                                StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setShellMainEntryPointTime(data.time);
                        return true;
                    }
            
            
            
            
            
                    case SET_BROWSER_MESSAGE_LOOP_START_TICKS_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams data =
                                StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setBrowserMessageLoopStartTicks(data.ticks);
                        return true;
                    }
            
            
            
            
            
                    case SET_BROWSER_WINDOW_DISPLAY_TICKS_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams data =
                                StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setBrowserWindowDisplayTicks(data.ticks);
                        return true;
                    }
            
            
            
            
            
                    case SET_BROWSER_OPEN_TABS_TIME_DELTA_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams data =
                                StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setBrowserOpenTabsTimeDelta(data.delta);
                        return true;
                    }
            
            
            
            
            
                    case SET_FIRST_WEB_CONTENTS_MAIN_FRAME_LOAD_TICKS_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams data =
                                StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setFirstWebContentsMainFrameLoadTicks(data.ticks);
                        return true;
                    }
            
            
            
            
            
                    case SET_FIRST_VISUALLY_NON_EMPTY_LAYOUT_TICKS_ORDINAL: {
            
                        StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams data =
                                StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setFirstVisuallyNonEmptyLayoutTicks(data.ticks);
                        return true;
                    }
            
            
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), StartupPerformanceDataCollector_Internal.MANAGER, messageWithHeader, receiver);
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
                    case GET_STARTUP_PERFORMANCE_TIMES_ORDINAL: {
            
                        StartupPerformanceDataCollectorGetStartupPerformanceTimesParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().getStartupPerformanceTimes(new StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class StartupPerformanceDataCollectorSetShellProcessCreationTimeParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long time;
    
    
    
        private StartupPerformanceDataCollectorSetShellProcessCreationTimeParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetShellProcessCreationTimeParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetShellProcessCreationTimeParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetShellProcessCreationTimeParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetShellProcessCreationTimeParams result = new StartupPerformanceDataCollectorSetShellProcessCreationTimeParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.time = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(time, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetShellProcessCreationTimeParams other = (StartupPerformanceDataCollectorSetShellProcessCreationTimeParams) object;
    
            if (this.time != other.time)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(time);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long time;
    
    
    
        private StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams result = new StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.time = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(time, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams other = (StartupPerformanceDataCollectorSetShellMainEntryPointTimeParams) object;
    
            if (this.time != other.time)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(time);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long ticks;
    
    
    
        private StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams result = new StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.ticks = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(ticks, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams other = (StartupPerformanceDataCollectorSetBrowserMessageLoopStartTicksParams) object;
    
            if (this.ticks != other.ticks)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(ticks);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long ticks;
    
    
    
        private StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams result = new StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.ticks = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(ticks, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams other = (StartupPerformanceDataCollectorSetBrowserWindowDisplayTicksParams) object;
    
            if (this.ticks != other.ticks)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(ticks);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long delta;
    
    
    
        private StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams result = new StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.delta = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(delta, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams other = (StartupPerformanceDataCollectorSetBrowserOpenTabsTimeDeltaParams) object;
    
            if (this.delta != other.delta)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(delta);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long ticks;
    
    
    
        private StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams result = new StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.ticks = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(ticks, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams other = (StartupPerformanceDataCollectorSetFirstWebContentsMainFrameLoadTicksParams) object;
    
            if (this.ticks != other.ticks)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(ticks);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long ticks;
    
    
    
        private StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams result = new StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.ticks = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(ticks, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams other = (StartupPerformanceDataCollectorSetFirstVisuallyNonEmptyLayoutTicksParams) object;
    
            if (this.ticks != other.ticks)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(ticks);
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorGetStartupPerformanceTimesParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
        private StartupPerformanceDataCollectorGetStartupPerformanceTimesParams(int version) {
            super(STRUCT_SIZE, version);
    
        }
    
        public StartupPerformanceDataCollectorGetStartupPerformanceTimesParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorGetStartupPerformanceTimesParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorGetStartupPerformanceTimesParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorGetStartupPerformanceTimesParams result = new StartupPerformanceDataCollectorGetStartupPerformanceTimesParams(mainDataHeader.elementsOrVersion);
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            return result;
        }
    }



    
    static final class StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public StartupPerformanceTimes times;
    
    
    
        private StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams() {
            this(0);
        }
    
        public static StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams result = new StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                
                result.times = StartupPerformanceTimes.decode(decoder1);
                
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(times, 8, false);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams other = (StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams) object;
    
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.times, other.times))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(times);
    
            return result;
        }
    }

    static class StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final StartupPerformanceDataCollector.GetStartupPerformanceTimesResponse mCallback;

        StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsForwardToCallback(StartupPerformanceDataCollector.GetStartupPerformanceTimesResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(GET_STARTUP_PERFORMANCE_TIMES_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams response = StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.times);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsProxyToResponder implements StartupPerformanceDataCollector.GetStartupPerformanceTimesResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(StartupPerformanceTimes times) {
            StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams _response = new StartupPerformanceDataCollectorGetStartupPerformanceTimesResponseParams();

            _response.times = times;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_STARTUP_PERFORMANCE_TIMES_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



}
