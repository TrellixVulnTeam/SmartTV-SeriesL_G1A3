
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     components/leveldb/public/interfaces/leveldb.mojom
//

package org.chromium.mojom.leveldb;

import org.chromium.base.annotations.SuppressFBWarnings;


class LevelDbDatabase_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<LevelDbDatabase, LevelDbDatabase.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<LevelDbDatabase, LevelDbDatabase.Proxy>() {
    
        public String getName() {
            return "leveldb::LevelDBDatabase";
        }
    
        public int getVersion() {
          return 0;
        }
    
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }
    
        public Stub buildStub(org.chromium.mojo.system.Core core, LevelDbDatabase impl) {
            return new Stub(core, impl);
        }
    
        public LevelDbDatabase[] buildArray(int size) {
          return new LevelDbDatabase[size];
        }
    };


    private static final int PUT_ORDINAL = 0;

    private static final int DELETE_ORDINAL = 1;

    private static final int WRITE_ORDINAL = 2;

    private static final int GET_ORDINAL = 3;

    private static final int GET_SNAPSHOT_ORDINAL = 4;

    private static final int RELEASE_SNAPSHOT_ORDINAL = 5;

    private static final int GET_FROM_SNAPSHOT_ORDINAL = 6;

    private static final int NEW_ITERATOR_ORDINAL = 7;

    private static final int NEW_ITERATOR_FROM_SNAPSHOT_ORDINAL = 8;

    private static final int RELEASE_ITERATOR_ORDINAL = 9;

    private static final int ITERATOR_SEEK_TO_FIRST_ORDINAL = 10;

    private static final int ITERATOR_SEEK_TO_LAST_ORDINAL = 11;

    private static final int ITERATOR_SEEK_ORDINAL = 12;

    private static final int ITERATOR_NEXT_ORDINAL = 13;

    private static final int ITERATOR_PREV_ORDINAL = 14;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements LevelDbDatabase.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void put(
byte[] key, byte[] value, 
PutResponse callback) {

            LevelDbDatabasePutParams _message = new LevelDbDatabasePutParams();

            _message.key = key;

            _message.value = value;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    PUT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabasePutResponseParamsForwardToCallback(callback));

        }


        @Override
        public void delete(
byte[] key, 
DeleteResponse callback) {

            LevelDbDatabaseDeleteParams _message = new LevelDbDatabaseDeleteParams();

            _message.key = key;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    DELETE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseDeleteResponseParamsForwardToCallback(callback));

        }


        @Override
        public void write(
BatchedOperation[] operations, 
WriteResponse callback) {

            LevelDbDatabaseWriteParams _message = new LevelDbDatabaseWriteParams();

            _message.operations = operations;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    WRITE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseWriteResponseParamsForwardToCallback(callback));

        }


        @Override
        public void get(
byte[] key, 
GetResponse callback) {

            LevelDbDatabaseGetParams _message = new LevelDbDatabaseGetParams();

            _message.key = key;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseGetResponseParamsForwardToCallback(callback));

        }


        @Override
        public void getSnapshot(

GetSnapshotResponse callback) {

            LevelDbDatabaseGetSnapshotParams _message = new LevelDbDatabaseGetSnapshotParams();


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseGetSnapshotResponseParamsForwardToCallback(callback));

        }


        @Override
        public void releaseSnapshot(
long snapshotId) {

            LevelDbDatabaseReleaseSnapshotParams _message = new LevelDbDatabaseReleaseSnapshotParams();

            _message.snapshotId = snapshotId;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RELEASE_SNAPSHOT_ORDINAL)));

        }


        @Override
        public void getFromSnapshot(
long snapshotId, byte[] key, 
GetFromSnapshotResponse callback) {

            LevelDbDatabaseGetFromSnapshotParams _message = new LevelDbDatabaseGetFromSnapshotParams();

            _message.snapshotId = snapshotId;

            _message.key = key;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_FROM_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseGetFromSnapshotResponseParamsForwardToCallback(callback));

        }


        @Override
        public void newIterator(

NewIteratorResponse callback) {

            LevelDbDatabaseNewIteratorParams _message = new LevelDbDatabaseNewIteratorParams();


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    NEW_ITERATOR_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseNewIteratorResponseParamsForwardToCallback(callback));

        }


        @Override
        public void newIteratorFromSnapshot(
long snapshotId, 
NewIteratorFromSnapshotResponse callback) {

            LevelDbDatabaseNewIteratorFromSnapshotParams _message = new LevelDbDatabaseNewIteratorFromSnapshotParams();

            _message.snapshotId = snapshotId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    NEW_ITERATOR_FROM_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseNewIteratorFromSnapshotResponseParamsForwardToCallback(callback));

        }


        @Override
        public void releaseIterator(
long iteratorId) {

            LevelDbDatabaseReleaseIteratorParams _message = new LevelDbDatabaseReleaseIteratorParams();

            _message.iteratorId = iteratorId;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RELEASE_ITERATOR_ORDINAL)));

        }


        @Override
        public void iteratorSeekToFirst(
long iteratorId, 
IteratorSeekToFirstResponse callback) {

            LevelDbDatabaseIteratorSeekToFirstParams _message = new LevelDbDatabaseIteratorSeekToFirstParams();

            _message.iteratorId = iteratorId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_TO_FIRST_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseIteratorSeekToFirstResponseParamsForwardToCallback(callback));

        }


        @Override
        public void iteratorSeekToLast(
long iteratorId, 
IteratorSeekToLastResponse callback) {

            LevelDbDatabaseIteratorSeekToLastParams _message = new LevelDbDatabaseIteratorSeekToLastParams();

            _message.iteratorId = iteratorId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_TO_LAST_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseIteratorSeekToLastResponseParamsForwardToCallback(callback));

        }


        @Override
        public void iteratorSeek(
long iteratorId, byte[] target, 
IteratorSeekResponse callback) {

            LevelDbDatabaseIteratorSeekParams _message = new LevelDbDatabaseIteratorSeekParams();

            _message.iteratorId = iteratorId;

            _message.target = target;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseIteratorSeekResponseParamsForwardToCallback(callback));

        }


        @Override
        public void iteratorNext(
long iteratorId, 
IteratorNextResponse callback) {

            LevelDbDatabaseIteratorNextParams _message = new LevelDbDatabaseIteratorNextParams();

            _message.iteratorId = iteratorId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_NEXT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseIteratorNextResponseParamsForwardToCallback(callback));

        }


        @Override
        public void iteratorPrev(
long iteratorId, 
IteratorPrevResponse callback) {

            LevelDbDatabaseIteratorPrevParams _message = new LevelDbDatabaseIteratorPrevParams();

            _message.iteratorId = iteratorId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_PREV_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new LevelDbDatabaseIteratorPrevResponseParamsForwardToCallback(callback));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<LevelDbDatabase> {

        Stub(org.chromium.mojo.system.Core core, LevelDbDatabase impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.NO_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                LevelDbDatabase_Internal.MANAGER, messageWithHeader);
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
                    case RELEASE_SNAPSHOT_ORDINAL: {
            
                        LevelDbDatabaseReleaseSnapshotParams data =
                                LevelDbDatabaseReleaseSnapshotParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().releaseSnapshot(data.snapshotId);
                        return true;
                    }
            
            
            
            
            
            
            
            
            
            
            
                    case RELEASE_ITERATOR_ORDINAL: {
            
                        LevelDbDatabaseReleaseIteratorParams data =
                                LevelDbDatabaseReleaseIteratorParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().releaseIterator(data.iteratorId);
                        return true;
                    }
            
            
            
            
            
            
            
            
            
            
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), LevelDbDatabase_Internal.MANAGER, messageWithHeader, receiver);
            
            
            
            
            
            
            
                    case PUT_ORDINAL: {
            
                        LevelDbDatabasePutParams data =
                                LevelDbDatabasePutParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().put(data.key, data.value, new LevelDbDatabasePutResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case DELETE_ORDINAL: {
            
                        LevelDbDatabaseDeleteParams data =
                                LevelDbDatabaseDeleteParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().delete(data.key, new LevelDbDatabaseDeleteResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case WRITE_ORDINAL: {
            
                        LevelDbDatabaseWriteParams data =
                                LevelDbDatabaseWriteParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().write(data.operations, new LevelDbDatabaseWriteResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case GET_ORDINAL: {
            
                        LevelDbDatabaseGetParams data =
                                LevelDbDatabaseGetParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().get(data.key, new LevelDbDatabaseGetResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case GET_SNAPSHOT_ORDINAL: {
            
                        LevelDbDatabaseGetSnapshotParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().getSnapshot(new LevelDbDatabaseGetSnapshotResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
            
            
                    case GET_FROM_SNAPSHOT_ORDINAL: {
            
                        LevelDbDatabaseGetFromSnapshotParams data =
                                LevelDbDatabaseGetFromSnapshotParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().getFromSnapshot(data.snapshotId, data.key, new LevelDbDatabaseGetFromSnapshotResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case NEW_ITERATOR_ORDINAL: {
            
                        LevelDbDatabaseNewIteratorParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().newIterator(new LevelDbDatabaseNewIteratorResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case NEW_ITERATOR_FROM_SNAPSHOT_ORDINAL: {
            
                        LevelDbDatabaseNewIteratorFromSnapshotParams data =
                                LevelDbDatabaseNewIteratorFromSnapshotParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().newIteratorFromSnapshot(data.snapshotId, new LevelDbDatabaseNewIteratorFromSnapshotResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
            
            
                    case ITERATOR_SEEK_TO_FIRST_ORDINAL: {
            
                        LevelDbDatabaseIteratorSeekToFirstParams data =
                                LevelDbDatabaseIteratorSeekToFirstParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().iteratorSeekToFirst(data.iteratorId, new LevelDbDatabaseIteratorSeekToFirstResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case ITERATOR_SEEK_TO_LAST_ORDINAL: {
            
                        LevelDbDatabaseIteratorSeekToLastParams data =
                                LevelDbDatabaseIteratorSeekToLastParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().iteratorSeekToLast(data.iteratorId, new LevelDbDatabaseIteratorSeekToLastResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case ITERATOR_SEEK_ORDINAL: {
            
                        LevelDbDatabaseIteratorSeekParams data =
                                LevelDbDatabaseIteratorSeekParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().iteratorSeek(data.iteratorId, data.target, new LevelDbDatabaseIteratorSeekResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case ITERATOR_NEXT_ORDINAL: {
            
                        LevelDbDatabaseIteratorNextParams data =
                                LevelDbDatabaseIteratorNextParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().iteratorNext(data.iteratorId, new LevelDbDatabaseIteratorNextResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
            
            
            
            
            
                    case ITERATOR_PREV_ORDINAL: {
            
                        LevelDbDatabaseIteratorPrevParams data =
                                LevelDbDatabaseIteratorPrevParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().iteratorPrev(data.iteratorId, new LevelDbDatabaseIteratorPrevResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class LevelDbDatabasePutParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabasePutParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public LevelDbDatabasePutParams() {
            this(0);
        }
    
        public static LevelDbDatabasePutParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabasePutParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabasePutParams result = new LevelDbDatabasePutParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(key, 8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabasePutParams other = (LevelDbDatabasePutParams) object;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }



    
    static final class LevelDbDatabasePutResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int status;
    
    
    
        private LevelDbDatabasePutResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabasePutResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabasePutResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabasePutResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabasePutResponseParams result = new LevelDbDatabasePutResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(status, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabasePutResponseParams other = (LevelDbDatabasePutResponseParams) object;
    
            if (this.status != other.status)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            return result;
        }
    }

    static class LevelDbDatabasePutResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.PutResponse mCallback;

        LevelDbDatabasePutResponseParamsForwardToCallback(LevelDbDatabase.PutResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(PUT_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabasePutResponseParams response = LevelDbDatabasePutResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.status);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabasePutResponseParamsProxyToResponder implements LevelDbDatabase.PutResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabasePutResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer status) {
            LevelDbDatabasePutResponseParams _response = new LevelDbDatabasePutResponseParams();

            _response.status = status;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    PUT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseDeleteParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public byte[] key;
    
    
    
        private LevelDbDatabaseDeleteParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseDeleteParams() {
            this(0);
        }
    
        public static LevelDbDatabaseDeleteParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseDeleteParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseDeleteParams result = new LevelDbDatabaseDeleteParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(key, 8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseDeleteParams other = (LevelDbDatabaseDeleteParams) object;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseDeleteResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int status;
    
    
    
        private LevelDbDatabaseDeleteResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseDeleteResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseDeleteResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseDeleteResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseDeleteResponseParams result = new LevelDbDatabaseDeleteResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(status, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseDeleteResponseParams other = (LevelDbDatabaseDeleteResponseParams) object;
    
            if (this.status != other.status)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            return result;
        }
    }

    static class LevelDbDatabaseDeleteResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.DeleteResponse mCallback;

        LevelDbDatabaseDeleteResponseParamsForwardToCallback(LevelDbDatabase.DeleteResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(DELETE_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseDeleteResponseParams response = LevelDbDatabaseDeleteResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.status);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseDeleteResponseParamsProxyToResponder implements LevelDbDatabase.DeleteResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseDeleteResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer status) {
            LevelDbDatabaseDeleteResponseParams _response = new LevelDbDatabaseDeleteResponseParams();

            _response.status = status;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    DELETE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseWriteParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public BatchedOperation[] operations;
    
    
    
        private LevelDbDatabaseWriteParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseWriteParams() {
            this(0);
        }
    
        public static LevelDbDatabaseWriteParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseWriteParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseWriteParams result = new LevelDbDatabaseWriteParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                
                
                {
                
                
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.operations = new BatchedOperation[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        
                        result.operations[i1] = BatchedOperation.decode(decoder2);
                        
                        
                    }
                
                }
                
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            
            
            if (operations == null) {
                encoder0.encodeNullPointer(8, false);
            } else {
            
            
            
            
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(operations.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                for (int i0 = 0; i0 < operations.length; ++i0) {
                    
                    
                    encoder1.encode(operations[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                    
                }
            }
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseWriteParams other = (LevelDbDatabaseWriteParams) object;
    
            if (!java.util.Arrays.deepEquals(this.operations, other.operations))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + java.util.Arrays.deepHashCode(operations);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseWriteResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int status;
    
    
    
        private LevelDbDatabaseWriteResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseWriteResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseWriteResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseWriteResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseWriteResponseParams result = new LevelDbDatabaseWriteResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(status, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseWriteResponseParams other = (LevelDbDatabaseWriteResponseParams) object;
    
            if (this.status != other.status)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            return result;
        }
    }

    static class LevelDbDatabaseWriteResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.WriteResponse mCallback;

        LevelDbDatabaseWriteResponseParamsForwardToCallback(LevelDbDatabase.WriteResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(WRITE_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseWriteResponseParams response = LevelDbDatabaseWriteResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.status);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseWriteResponseParamsProxyToResponder implements LevelDbDatabase.WriteResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseWriteResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer status) {
            LevelDbDatabaseWriteResponseParams _response = new LevelDbDatabaseWriteResponseParams();

            _response.status = status;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    WRITE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseGetParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public byte[] key;
    
    
    
        private LevelDbDatabaseGetParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseGetParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetParams result = new LevelDbDatabaseGetParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(key, 8, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseGetParams other = (LevelDbDatabaseGetParams) object;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseGetResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int status;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseGetResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public LevelDbDatabaseGetResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetResponseParams result = new LevelDbDatabaseGetResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(status, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseGetResponseParams other = (LevelDbDatabaseGetResponseParams) object;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseGetResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.GetResponse mCallback;

        LevelDbDatabaseGetResponseParamsForwardToCallback(LevelDbDatabase.GetResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(GET_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseGetResponseParams response = LevelDbDatabaseGetResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.status, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseGetResponseParamsProxyToResponder implements LevelDbDatabase.GetResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseGetResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer status, byte[] value) {
            LevelDbDatabaseGetResponseParams _response = new LevelDbDatabaseGetResponseParams();

            _response.status = status;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseGetSnapshotParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
        private LevelDbDatabaseGetSnapshotParams(int version) {
            super(STRUCT_SIZE, version);
    
        }
    
        public LevelDbDatabaseGetSnapshotParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetSnapshotParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetSnapshotParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetSnapshotParams result = new LevelDbDatabaseGetSnapshotParams(mainDataHeader.elementsOrVersion);
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseGetSnapshotResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long snapshotId;
    
    
    
        private LevelDbDatabaseGetSnapshotResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseGetSnapshotResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetSnapshotResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetSnapshotResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetSnapshotResponseParams result = new LevelDbDatabaseGetSnapshotResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.snapshotId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(snapshotId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseGetSnapshotResponseParams other = (LevelDbDatabaseGetSnapshotResponseParams) object;
    
            if (this.snapshotId != other.snapshotId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(snapshotId);
    
            return result;
        }
    }

    static class LevelDbDatabaseGetSnapshotResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.GetSnapshotResponse mCallback;

        LevelDbDatabaseGetSnapshotResponseParamsForwardToCallback(LevelDbDatabase.GetSnapshotResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(GET_SNAPSHOT_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseGetSnapshotResponseParams response = LevelDbDatabaseGetSnapshotResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.snapshotId);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseGetSnapshotResponseParamsProxyToResponder implements LevelDbDatabase.GetSnapshotResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseGetSnapshotResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Long snapshotId) {
            LevelDbDatabaseGetSnapshotResponseParams _response = new LevelDbDatabaseGetSnapshotResponseParams();

            _response.snapshotId = snapshotId;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseReleaseSnapshotParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long snapshotId;
    
    
    
        private LevelDbDatabaseReleaseSnapshotParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseReleaseSnapshotParams() {
            this(0);
        }
    
        public static LevelDbDatabaseReleaseSnapshotParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseReleaseSnapshotParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseReleaseSnapshotParams result = new LevelDbDatabaseReleaseSnapshotParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.snapshotId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(snapshotId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseReleaseSnapshotParams other = (LevelDbDatabaseReleaseSnapshotParams) object;
    
            if (this.snapshotId != other.snapshotId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(snapshotId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseGetFromSnapshotParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long snapshotId;
    
        public byte[] key;
    
    
    
        private LevelDbDatabaseGetFromSnapshotParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public LevelDbDatabaseGetFromSnapshotParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetFromSnapshotParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetFromSnapshotParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetFromSnapshotParams result = new LevelDbDatabaseGetFromSnapshotParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.snapshotId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(snapshotId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseGetFromSnapshotParams other = (LevelDbDatabaseGetFromSnapshotParams) object;
    
            if (this.snapshotId != other.snapshotId)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(snapshotId);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseGetFromSnapshotResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int status;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseGetFromSnapshotResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public LevelDbDatabaseGetFromSnapshotResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseGetFromSnapshotResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseGetFromSnapshotResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseGetFromSnapshotResponseParams result = new LevelDbDatabaseGetFromSnapshotResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(status, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseGetFromSnapshotResponseParams other = (LevelDbDatabaseGetFromSnapshotResponseParams) object;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseGetFromSnapshotResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.GetFromSnapshotResponse mCallback;

        LevelDbDatabaseGetFromSnapshotResponseParamsForwardToCallback(LevelDbDatabase.GetFromSnapshotResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(GET_FROM_SNAPSHOT_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseGetFromSnapshotResponseParams response = LevelDbDatabaseGetFromSnapshotResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.status, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseGetFromSnapshotResponseParamsProxyToResponder implements LevelDbDatabase.GetFromSnapshotResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseGetFromSnapshotResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer status, byte[] value) {
            LevelDbDatabaseGetFromSnapshotResponseParams _response = new LevelDbDatabaseGetFromSnapshotResponseParams();

            _response.status = status;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_FROM_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseNewIteratorParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
        private LevelDbDatabaseNewIteratorParams(int version) {
            super(STRUCT_SIZE, version);
    
        }
    
        public LevelDbDatabaseNewIteratorParams() {
            this(0);
        }
    
        public static LevelDbDatabaseNewIteratorParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseNewIteratorParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseNewIteratorParams result = new LevelDbDatabaseNewIteratorParams(mainDataHeader.elementsOrVersion);
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseNewIteratorResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseNewIteratorResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseNewIteratorResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseNewIteratorResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseNewIteratorResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseNewIteratorResponseParams result = new LevelDbDatabaseNewIteratorResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseNewIteratorResponseParams other = (LevelDbDatabaseNewIteratorResponseParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }

    static class LevelDbDatabaseNewIteratorResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.NewIteratorResponse mCallback;

        LevelDbDatabaseNewIteratorResponseParamsForwardToCallback(LevelDbDatabase.NewIteratorResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(NEW_ITERATOR_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseNewIteratorResponseParams response = LevelDbDatabaseNewIteratorResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.iteratorId);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseNewIteratorResponseParamsProxyToResponder implements LevelDbDatabase.NewIteratorResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseNewIteratorResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Long iteratorId) {
            LevelDbDatabaseNewIteratorResponseParams _response = new LevelDbDatabaseNewIteratorResponseParams();

            _response.iteratorId = iteratorId;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    NEW_ITERATOR_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseNewIteratorFromSnapshotParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long snapshotId;
    
    
    
        private LevelDbDatabaseNewIteratorFromSnapshotParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseNewIteratorFromSnapshotParams() {
            this(0);
        }
    
        public static LevelDbDatabaseNewIteratorFromSnapshotParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseNewIteratorFromSnapshotParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseNewIteratorFromSnapshotParams result = new LevelDbDatabaseNewIteratorFromSnapshotParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.snapshotId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(snapshotId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseNewIteratorFromSnapshotParams other = (LevelDbDatabaseNewIteratorFromSnapshotParams) object;
    
            if (this.snapshotId != other.snapshotId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(snapshotId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseNewIteratorFromSnapshotResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseNewIteratorFromSnapshotResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseNewIteratorFromSnapshotResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseNewIteratorFromSnapshotResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseNewIteratorFromSnapshotResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseNewIteratorFromSnapshotResponseParams result = new LevelDbDatabaseNewIteratorFromSnapshotResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseNewIteratorFromSnapshotResponseParams other = (LevelDbDatabaseNewIteratorFromSnapshotResponseParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }

    static class LevelDbDatabaseNewIteratorFromSnapshotResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.NewIteratorFromSnapshotResponse mCallback;

        LevelDbDatabaseNewIteratorFromSnapshotResponseParamsForwardToCallback(LevelDbDatabase.NewIteratorFromSnapshotResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(NEW_ITERATOR_FROM_SNAPSHOT_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseNewIteratorFromSnapshotResponseParams response = LevelDbDatabaseNewIteratorFromSnapshotResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.iteratorId);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseNewIteratorFromSnapshotResponseParamsProxyToResponder implements LevelDbDatabase.NewIteratorFromSnapshotResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseNewIteratorFromSnapshotResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Long iteratorId) {
            LevelDbDatabaseNewIteratorFromSnapshotResponseParams _response = new LevelDbDatabaseNewIteratorFromSnapshotResponseParams();

            _response.iteratorId = iteratorId;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    NEW_ITERATOR_FROM_SNAPSHOT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseReleaseIteratorParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseReleaseIteratorParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseReleaseIteratorParams() {
            this(0);
        }
    
        public static LevelDbDatabaseReleaseIteratorParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseReleaseIteratorParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseReleaseIteratorParams result = new LevelDbDatabaseReleaseIteratorParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseReleaseIteratorParams other = (LevelDbDatabaseReleaseIteratorParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekToFirstParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseIteratorSeekToFirstParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekToFirstParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekToFirstParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekToFirstParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekToFirstParams result = new LevelDbDatabaseIteratorSeekToFirstParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekToFirstParams other = (LevelDbDatabaseIteratorSeekToFirstParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekToFirstResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public boolean valid;
    
        public int status;
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseIteratorSeekToFirstResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekToFirstResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekToFirstResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekToFirstResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekToFirstResponseParams result = new LevelDbDatabaseIteratorSeekToFirstResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.valid = decoder0.readBoolean(8, 0);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(valid, 8, 0);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(status, 12);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekToFirstResponseParams other = (LevelDbDatabaseIteratorSeekToFirstResponseParams) object;
    
            if (this.valid != other.valid)
                return false;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(valid);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseIteratorSeekToFirstResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.IteratorSeekToFirstResponse mCallback;

        LevelDbDatabaseIteratorSeekToFirstResponseParamsForwardToCallback(LevelDbDatabase.IteratorSeekToFirstResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(ITERATOR_SEEK_TO_FIRST_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseIteratorSeekToFirstResponseParams response = LevelDbDatabaseIteratorSeekToFirstResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.valid, response.status, response.key, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseIteratorSeekToFirstResponseParamsProxyToResponder implements LevelDbDatabase.IteratorSeekToFirstResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseIteratorSeekToFirstResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Boolean valid, Integer status, byte[] key, byte[] value) {
            LevelDbDatabaseIteratorSeekToFirstResponseParams _response = new LevelDbDatabaseIteratorSeekToFirstResponseParams();

            _response.valid = valid;

            _response.status = status;

            _response.key = key;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_TO_FIRST_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekToLastParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseIteratorSeekToLastParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekToLastParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekToLastParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekToLastParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekToLastParams result = new LevelDbDatabaseIteratorSeekToLastParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekToLastParams other = (LevelDbDatabaseIteratorSeekToLastParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekToLastResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public boolean valid;
    
        public int status;
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseIteratorSeekToLastResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekToLastResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekToLastResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekToLastResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekToLastResponseParams result = new LevelDbDatabaseIteratorSeekToLastResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.valid = decoder0.readBoolean(8, 0);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(valid, 8, 0);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(status, 12);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekToLastResponseParams other = (LevelDbDatabaseIteratorSeekToLastResponseParams) object;
    
            if (this.valid != other.valid)
                return false;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(valid);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseIteratorSeekToLastResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.IteratorSeekToLastResponse mCallback;

        LevelDbDatabaseIteratorSeekToLastResponseParamsForwardToCallback(LevelDbDatabase.IteratorSeekToLastResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(ITERATOR_SEEK_TO_LAST_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseIteratorSeekToLastResponseParams response = LevelDbDatabaseIteratorSeekToLastResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.valid, response.status, response.key, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseIteratorSeekToLastResponseParamsProxyToResponder implements LevelDbDatabase.IteratorSeekToLastResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseIteratorSeekToLastResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Boolean valid, Integer status, byte[] key, byte[] value) {
            LevelDbDatabaseIteratorSeekToLastResponseParams _response = new LevelDbDatabaseIteratorSeekToLastResponseParams();

            _response.valid = valid;

            _response.status = status;

            _response.key = key;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_TO_LAST_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
        public byte[] target;
    
    
    
        private LevelDbDatabaseIteratorSeekParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekParams result = new LevelDbDatabaseIteratorSeekParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.target = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(target, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekParams other = (LevelDbDatabaseIteratorSeekParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
            if (!java.util.Arrays.equals(this.target, other.target))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            result = prime * result + java.util.Arrays.hashCode(target);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorSeekResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public boolean valid;
    
        public int status;
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseIteratorSeekResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorSeekResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorSeekResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorSeekResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorSeekResponseParams result = new LevelDbDatabaseIteratorSeekResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.valid = decoder0.readBoolean(8, 0);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(valid, 8, 0);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(status, 12);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorSeekResponseParams other = (LevelDbDatabaseIteratorSeekResponseParams) object;
    
            if (this.valid != other.valid)
                return false;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(valid);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseIteratorSeekResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.IteratorSeekResponse mCallback;

        LevelDbDatabaseIteratorSeekResponseParamsForwardToCallback(LevelDbDatabase.IteratorSeekResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(ITERATOR_SEEK_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseIteratorSeekResponseParams response = LevelDbDatabaseIteratorSeekResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.valid, response.status, response.key, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseIteratorSeekResponseParamsProxyToResponder implements LevelDbDatabase.IteratorSeekResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseIteratorSeekResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Boolean valid, Integer status, byte[] key, byte[] value) {
            LevelDbDatabaseIteratorSeekResponseParams _response = new LevelDbDatabaseIteratorSeekResponseParams();

            _response.valid = valid;

            _response.status = status;

            _response.key = key;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_SEEK_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseIteratorNextParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseIteratorNextParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseIteratorNextParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorNextParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorNextParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorNextParams result = new LevelDbDatabaseIteratorNextParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorNextParams other = (LevelDbDatabaseIteratorNextParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorNextResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public boolean valid;
    
        public int status;
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseIteratorNextResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorNextResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorNextResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorNextResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorNextResponseParams result = new LevelDbDatabaseIteratorNextResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.valid = decoder0.readBoolean(8, 0);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(valid, 8, 0);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(status, 12);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorNextResponseParams other = (LevelDbDatabaseIteratorNextResponseParams) object;
    
            if (this.valid != other.valid)
                return false;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(valid);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseIteratorNextResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.IteratorNextResponse mCallback;

        LevelDbDatabaseIteratorNextResponseParamsForwardToCallback(LevelDbDatabase.IteratorNextResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(ITERATOR_NEXT_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseIteratorNextResponseParams response = LevelDbDatabaseIteratorNextResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.valid, response.status, response.key, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseIteratorNextResponseParamsProxyToResponder implements LevelDbDatabase.IteratorNextResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseIteratorNextResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Boolean valid, Integer status, byte[] key, byte[] value) {
            LevelDbDatabaseIteratorNextResponseParams _response = new LevelDbDatabaseIteratorNextResponseParams();

            _response.valid = valid;

            _response.status = status;

            _response.key = key;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_NEXT_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class LevelDbDatabaseIteratorPrevParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public long iteratorId;
    
    
    
        private LevelDbDatabaseIteratorPrevParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public LevelDbDatabaseIteratorPrevParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorPrevParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorPrevParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorPrevParams result = new LevelDbDatabaseIteratorPrevParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.iteratorId = decoder0.readLong(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(iteratorId, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorPrevParams other = (LevelDbDatabaseIteratorPrevParams) object;
    
            if (this.iteratorId != other.iteratorId)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(iteratorId);
    
            return result;
        }
    }



    
    static final class LevelDbDatabaseIteratorPrevResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public boolean valid;
    
        public int status;
    
        public byte[] key;
    
        public byte[] value;
    
    
    
        private LevelDbDatabaseIteratorPrevResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
    
    
    
    
        }
    
        public LevelDbDatabaseIteratorPrevResponseParams() {
            this(0);
        }
    
        public static LevelDbDatabaseIteratorPrevResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static LevelDbDatabaseIteratorPrevResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            LevelDbDatabaseIteratorPrevResponseParams result = new LevelDbDatabaseIteratorPrevResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.valid = decoder0.readBoolean(8, 0);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.status = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.key = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(valid, 8, 0);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(status, 12);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(key, 16, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            LevelDbDatabaseIteratorPrevResponseParams other = (LevelDbDatabaseIteratorPrevResponseParams) object;
    
            if (this.valid != other.valid)
                return false;
    
            if (this.status != other.status)
                return false;
    
            if (!java.util.Arrays.equals(this.key, other.key))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(valid);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(status);
    
            result = prime * result + java.util.Arrays.hashCode(key);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }

    static class LevelDbDatabaseIteratorPrevResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final LevelDbDatabase.IteratorPrevResponse mCallback;

        LevelDbDatabaseIteratorPrevResponseParamsForwardToCallback(LevelDbDatabase.IteratorPrevResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(ITERATOR_PREV_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                LevelDbDatabaseIteratorPrevResponseParams response = LevelDbDatabaseIteratorPrevResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.valid, response.status, response.key, response.value);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class LevelDbDatabaseIteratorPrevResponseParamsProxyToResponder implements LevelDbDatabase.IteratorPrevResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        LevelDbDatabaseIteratorPrevResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Boolean valid, Integer status, byte[] key, byte[] value) {
            LevelDbDatabaseIteratorPrevResponseParams _response = new LevelDbDatabaseIteratorPrevResponseParams();

            _response.valid = valid;

            _response.status = status;

            _response.key = key;

            _response.value = value;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    ITERATOR_PREV_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



}
