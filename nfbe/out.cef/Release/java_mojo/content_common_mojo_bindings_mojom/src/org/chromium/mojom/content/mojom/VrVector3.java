
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     content/common/vr_service.mojom
//

package org.chromium.mojom.content.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;


public final class VrVector3 extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 24;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];





    public float x;

    public float y;

    public float z;



    private VrVector3(int version) {
        super(STRUCT_SIZE, version);







    }

    public VrVector3() {
        this(0);
    }

    public static VrVector3 deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    @SuppressWarnings("unchecked")
    public static VrVector3 decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
        VrVector3 result = new VrVector3(mainDataHeader.elementsOrVersion);


        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.x = decoder0.readFloat(8);
            
        }









        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.y = decoder0.readFloat(12);
            
        }









        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.z = decoder0.readFloat(16);
            
        }
















        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {

        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);



        
        
        encoder0.encode(x, 8);
        









        
        
        encoder0.encode(y, 12);
        









        
        
        encoder0.encode(z, 16);
        
















    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;

        VrVector3 other = (VrVector3) object;

        if (this.x != other.x)
            return false;

        if (this.y != other.y)
            return false;

        if (this.z != other.z)
            return false;


        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(x);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(y);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(z);

        return result;
    }
}
