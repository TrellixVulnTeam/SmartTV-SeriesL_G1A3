
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/WebKit/public/platform/modules/notifications/notification.mojom
//

package org.chromium.mojom.blink.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;


public final class Notification extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 88;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(88, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];


    
    public static final int MAXIMUM_DEVELOPER_DATA_BYTES = (int) 1048576L;





    public String title;

    public int direction;

    public String lang;

    public String body;

    public String tag;

    public String icon;

    public int[] vibrationPattern;

    public double timestamp;

    public boolean renotify;

    public boolean silent;

    public boolean requireInteraction;

    public byte[] data;

    public NotificationAction[] actions;



    private Notification(int version) {
        super(STRUCT_SIZE, version);


















        renotify = (boolean) false;



        silent = (boolean) false;



        requireInteraction = (boolean) false;






    }

    public Notification() {
        this(0);
    }

    public static Notification deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    @SuppressWarnings("unchecked")
    public static Notification decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
        Notification result = new Notification(mainDataHeader.elementsOrVersion);


        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.title = decoder0.readString(8, false);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.direction = decoder0.readInt(16);
            
        }









        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.renotify = decoder0.readBoolean(20, 0);
            
        }

        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.silent = decoder0.readBoolean(20, 1);
            
        }

        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.requireInteraction = decoder0.readBoolean(20, 2);
            
        }









        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.lang = decoder0.readString(24, true);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.body = decoder0.readString(32, false);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.tag = decoder0.readString(40, false);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.icon = decoder0.readString(48, false);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.vibrationPattern = decoder0.readInts(56, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.timestamp = decoder0.readDouble(64);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.data = decoder0.readBytes(72, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, false);
            
            
            {
            
            
                org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                result.actions = new NotificationAction[si1.elementsOrVersion];
                for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                    
                    
                    org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                    
                    result.actions[i1] = NotificationAction.decode(decoder2);
                    
                    
                }
            
            }
            
            
        }
















        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {

        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);



        
        
        encoder0.encode(title, 8, false);
        

















        
        
        encoder0.encode(direction, 16);
        









        
        
        encoder0.encode(renotify, 20, 0);
        

        
        
        encoder0.encode(silent, 20, 1);
        

        
        
        encoder0.encode(requireInteraction, 20, 2);
        









        
        
        encoder0.encode(lang, 24, true);
        

















        
        
        encoder0.encode(body, 32, false);
        

















        
        
        encoder0.encode(tag, 40, false);
        

















        
        
        encoder0.encode(icon, 48, false);
        

















        
        
        encoder0.encode(vibrationPattern, 56, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        

















        
        
        encoder0.encode(timestamp, 64);
        

















        
        
        encoder0.encode(data, 72, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        

















        
        
        
        
        if (actions == null) {
            encoder0.encodeNullPointer(80, false);
        } else {
        
        
        
        
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(actions.length, 80, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < actions.length; ++i0) {
                
                
                encoder1.encode(actions[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                
            }
        }
        
















    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;

        Notification other = (Notification) object;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.title, other.title))
            return false;

        if (this.direction != other.direction)
            return false;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.lang, other.lang))
            return false;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.body, other.body))
            return false;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.tag, other.tag))
            return false;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.icon, other.icon))
            return false;

        if (!java.util.Arrays.equals(this.vibrationPattern, other.vibrationPattern))
            return false;

        if (this.timestamp != other.timestamp)
            return false;

        if (this.renotify != other.renotify)
            return false;

        if (this.silent != other.silent)
            return false;

        if (this.requireInteraction != other.requireInteraction)
            return false;

        if (!java.util.Arrays.equals(this.data, other.data))
            return false;

        if (!java.util.Arrays.deepEquals(this.actions, other.actions))
            return false;


        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(title);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(direction);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(lang);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(body);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(tag);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(icon);

        result = prime * result + java.util.Arrays.hashCode(vibrationPattern);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(timestamp);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(renotify);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(silent);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(requireInteraction);

        result = prime * result + java.util.Arrays.hashCode(data);

        result = prime * result + java.util.Arrays.deepHashCode(actions);

        return result;
    }
}
