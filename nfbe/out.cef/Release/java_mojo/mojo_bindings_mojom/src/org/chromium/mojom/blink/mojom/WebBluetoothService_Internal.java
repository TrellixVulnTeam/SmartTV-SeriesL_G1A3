
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/WebKit/public/platform/modules/bluetooth/web_bluetooth.mojom
//

package org.chromium.mojom.blink.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;


class WebBluetoothService_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<WebBluetoothService, WebBluetoothService.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<WebBluetoothService, WebBluetoothService.Proxy>() {
    
        public String getName() {
            return "blink::mojom::WebBluetoothService";
        }
    
        public int getVersion() {
          return 0;
        }
    
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }
    
        public Stub buildStub(org.chromium.mojo.system.Core core, WebBluetoothService impl) {
            return new Stub(core, impl);
        }
    
        public WebBluetoothService[] buildArray(int size) {
          return new WebBluetoothService[size];
        }
    };


    private static final int REMOTE_CHARACTERISTIC_WRITE_VALUE_ORDINAL = 0;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements WebBluetoothService.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void remoteCharacteristicWriteValue(
String characteristicInstanceId, byte[] value, 
RemoteCharacteristicWriteValueResponse callback) {

            WebBluetoothServiceRemoteCharacteristicWriteValueParams _message = new WebBluetoothServiceRemoteCharacteristicWriteValueParams();

            _message.characteristicInstanceId = characteristicInstanceId;

            _message.value = value;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    REMOTE_CHARACTERISTIC_WRITE_VALUE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsForwardToCallback(callback));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<WebBluetoothService> {

        Stub(org.chromium.mojo.system.Core core, WebBluetoothService impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.NO_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                WebBluetoothService_Internal.MANAGER, messageWithHeader);
            
            
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), WebBluetoothService_Internal.MANAGER, messageWithHeader, receiver);
            
            
            
            
            
            
            
                    case REMOTE_CHARACTERISTIC_WRITE_VALUE_ORDINAL: {
            
                        WebBluetoothServiceRemoteCharacteristicWriteValueParams data =
                                WebBluetoothServiceRemoteCharacteristicWriteValueParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().remoteCharacteristicWriteValue(data.characteristicInstanceId, data.value, new WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class WebBluetoothServiceRemoteCharacteristicWriteValueParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public String characteristicInstanceId;
    
        public byte[] value;
    
    
    
        private WebBluetoothServiceRemoteCharacteristicWriteValueParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public WebBluetoothServiceRemoteCharacteristicWriteValueParams() {
            this(0);
        }
    
        public static WebBluetoothServiceRemoteCharacteristicWriteValueParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static WebBluetoothServiceRemoteCharacteristicWriteValueParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            WebBluetoothServiceRemoteCharacteristicWriteValueParams result = new WebBluetoothServiceRemoteCharacteristicWriteValueParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.characteristicInstanceId = decoder0.readString(8, false);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.value = decoder0.readBytes(16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(characteristicInstanceId, 8, false);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(value, 16, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            WebBluetoothServiceRemoteCharacteristicWriteValueParams other = (WebBluetoothServiceRemoteCharacteristicWriteValueParams) object;
    
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.characteristicInstanceId, other.characteristicInstanceId))
                return false;
    
            if (!java.util.Arrays.equals(this.value, other.value))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(characteristicInstanceId);
    
            result = prime * result + java.util.Arrays.hashCode(value);
    
            return result;
        }
    }



    
    static final class WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int error;
    
    
    
        private WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams() {
            this(0);
        }
    
        public static WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams result = new WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.error = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(error, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams other = (WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams) object;
    
            if (this.error != other.error)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(error);
    
            return result;
        }
    }

    static class WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final WebBluetoothService.RemoteCharacteristicWriteValueResponse mCallback;

        WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsForwardToCallback(WebBluetoothService.RemoteCharacteristicWriteValueResponse callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(REMOTE_CHARACTERISTIC_WRITE_VALUE_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams response = WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.error);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsProxyToResponder implements WebBluetoothService.RemoteCharacteristicWriteValueResponse {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        WebBluetoothServiceRemoteCharacteristicWriteValueResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Integer error) {
            WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams _response = new WebBluetoothServiceRemoteCharacteristicWriteValueResponseParams();

            _response.error = error;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    REMOTE_CHARACTERISTIC_WRITE_VALUE_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



}
