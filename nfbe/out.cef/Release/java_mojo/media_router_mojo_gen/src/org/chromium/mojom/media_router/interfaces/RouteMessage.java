
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     chrome/browser/media/router/mojo/media_router.mojom
//

package org.chromium.mojom.media_router.interfaces;

import org.chromium.base.annotations.SuppressFBWarnings;


public final class RouteMessage extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 32;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];



    public static final class Type {
    
    
        public static final int TEXT = 0;
    
        public static final int BINARY = TEXT + 1;
    
    
        private Type() {}
    
    }




    public int type;

    public String message;

    public byte[] data;



    private RouteMessage(int version) {
        super(STRUCT_SIZE, version);







    }

    public RouteMessage() {
        this(0);
    }

    public static RouteMessage deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    @SuppressWarnings("unchecked")
    public static RouteMessage decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
        RouteMessage result = new RouteMessage(mainDataHeader.elementsOrVersion);


        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.type = decoder0.readInt(8);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.message = decoder0.readString(16, true);
            
        }

















        if (mainDataHeader.elementsOrVersion >= 0) {
            
            
            result.data = decoder0.readBytes(24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            
        }
















        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {

        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);



        
        
        encoder0.encode(type, 8);
        

















        
        
        encoder0.encode(message, 16, true);
        

















        
        
        encoder0.encode(data, 24, org.chromium.mojo.bindings.BindingsHelper.ARRAY_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        
















    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;

        RouteMessage other = (RouteMessage) object;

        if (this.type != other.type)
            return false;

        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.message, other.message))
            return false;

        if (!java.util.Arrays.equals(this.data, other.data))
            return false;


        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(type);

        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(message);

        result = prime * result + java.util.Arrays.hashCode(data);

        return result;
    }
}
